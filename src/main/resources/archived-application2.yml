# ===============================
# Claims App â€” Single archived-application2.yml (profiles: localfs, soap)
# Bulletproof for ingestion testing, aligned with IngestionProperties.
# ===============================

spring:
  application:
    name: claims-app
  main:
    allow-bean-definition-overriding: false   # fail fast if a bean is defined twice
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/claims}
    username: ${DB_USER:claims_user}
    password: ${DB_PASS:securepass}
    hikari:
      maximum-pool-size: 12
      minimum-idle: 4
      connection-timeout: 30000
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none                           # no schema mutations
    properties:
      hibernate:
        default_schema: claims                 # matches DDL
        jdbc:
          batch_size: 100
        order_inserts: true
        order_updates: true
  flyway:
    enabled: false                             # hard off

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers,threaddump,env,configprops

logging:
  level:
    com.acme.claims: DEBUG                     # orchestrator/fetcher/pipeline visibility
    org.springframework.scheduling: INFO
    org.hibernate.SQL: INFO
    org.hibernate.orm.jdbc.bind: INFO
claims:
  refdata:
    bootstrap:
      enabled: false
      strict: false
      location: classpath:refdata/
      delimiter: ','
      batch-size: 500
    auto-insert: true
  ingestion: # Mode hint used by your code; profile blocks below will set this explicitly too.
      mode: localfs

      # Single switch: stage/archive files on disk
      stageToDisk: true

      # Orchestrator schedule (your POJO requires fixedDelayMs as long)
      poll:
        fixedDelayMs: ${INGESTION_POLL_MS:20000}   # 20s default

      # Backpressure / concurrency
      queue:
        capacity: ${INGESTION_QUEUE_CAP:256}
      concurrency:
        parserWorkers: ${INGESTION_PARSER_WORKERS:8}

      # Batching / TX window
      batch:
        size: ${INGESTION_BATCH_SIZE:1000}
        maxTxnSeconds: ${INGESTION_BATCH_TXN_SEC:5}
      tx:
        perFile: ${INGESTION_TX_PER_FILE:true}
        perChunk: ${INGESTION_TX_PER_CHUNK:false}

      # ACK policy (default OFF; enable later to test success-only ACK)
      ack:
        enabled: ${INGESTION_ACK:false}

      # Hash/obfuscate sensitive fields
      hashSensitive:
        enabled: ${INGESTION_HASH:false}

      # LocalFS locations (Fetcher reads readyDir; Pipeline archives to ok/fail)
      localfs:
        readyDir: ${INGESTION_LOCAL_READY:C:\Users\kvikr\Downloads\claims-backend-full\target\incoming}
        archiveOkDir: ${INGESTION_LOCAL_ARCHIVE_OK:C:\Users\kvikr\Downloads\claims-backend-full\target\done}
        archiveFailDir: ${INGESTION_LOCAL_ARCHIVE_FAIL:C:\Users\kvikr\Downloads\claims-backend-full\target\error}

      # SOAP connection (only used in soap profile)
      soap:
        endpoint: ${DHPO_ENDPOINT:http://localhost:8089/soap}
        username: ${DHPO_USERNAME:dhpo_user}
        password: ${DHPO_PASSWORD:dhpo_pass}

# ===== EXACT keys bound by com.acme.claims.ingestion.config.IngestionProperties =====

# -------- LOCALFS PROFILE (explicit) --------
---
spring:
  config:
    activate:
      on-profile: localfs
claims:
  ingestion:
    mode: localfs

# -------- SOAP PROFILE --------
---
spring:
  config:
    activate:
      on-profile: soap
claims:
  ingestion:
    mode: soap

-- ==========================================================================================================
-- TODO: WRITE-OFF AMOUNT EXTRACTION
-- ==========================================================================================================
-- 
-- Date: 2025-09-17
-- Purpose: TODO item for implementing write-off amount extraction
-- 
-- REQUIREMENT:
-- Write-off Amount (WriteOffAmt) needs to be extracted from either:
-- 1. Remittance XML tags (if available)
-- 2. claims.claim(comments) field using regex extraction
-- 
-- CURRENT STATUS:
-- - Placeholder implementation: write_off_amount = claim.net - total_payment_amount
-- - Need to investigate actual write-off data sources
-- 
-- IMPLEMENTATION OPTIONS:
-- 
-- Option 1: Remittance XML Tags
-- - Check if write-off information is available in remittance XML
-- - Look for specific tags like <WriteOff>, <Adjustment>, <Deduction>
-- - Map to remittance_activity or create new remittance_adjustment table
-- 
-- Option 2: Regex Extraction from Comments
-- - Create function to extract write-off amounts from claims.claim(comments)
-- - Use regex patterns to identify write-off amounts
-- - Examples: "Write-off: $100", "WO: 50.00", "Adjustment: -25.50"
-- 
-- Option 3: Separate Write-off Table
-- - Create claims.write_off table to track write-offs separately
-- - Link to claim_key_id and remittance_claim_id
-- - Include write-off_type, amount, reason, date
-- 
-- RECOMMENDED APPROACH:
-- 1. First investigate remittance XML for write-off tags
-- 2. If not available, implement regex extraction from comments
-- 3. Consider separate write-off table for future enhancements
-- 
-- REGEX PATTERNS TO CONSIDER:
-- - Write-off: \$?(\d+(?:\.\d{2})?)
-- - WO: \$?(\d+(?:\.\d{2})?)
-- - Adjustment: -?\$?(\d+(?:\.\d{2})?)
-- - Deduction: \$?(\d+(?:\.\d{2})?)
-- 
-- EXAMPLE IMPLEMENTATION:
-- 
-- CREATE OR REPLACE FUNCTION claims.extract_writeoff_from_comments(
--   p_comments TEXT
-- ) RETURNS NUMERIC
-- LANGUAGE plpgsql
-- AS $$
-- DECLARE
--   v_writeoff_amount NUMERIC := 0;
--   v_pattern TEXT;
-- BEGIN
--   IF p_comments IS NULL THEN
--     RETURN 0;
--   END IF;
--   
--   -- Try different patterns
--   v_pattern := 'Write-off:\s*\$?(\d+(?:\.\d{2})?)';
--   IF p_comments ~* v_pattern THEN
--     v_writeoff_amount := (regexp_match(p_comments, v_pattern, 'i'))[1]::NUMERIC;
--   END IF;
--   
--   -- Add more patterns as needed
--   
--   RETURN COALESCE(v_writeoff_amount, 0);
-- END;
-- $$;
-- 
-- ==========================================================================================================
-- END OF TODO: WRITE-OFF AMOUNT EXTRACTION
-- ==========================================================================================================
